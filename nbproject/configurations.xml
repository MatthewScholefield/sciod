<?xml version="1.0" encoding="UTF-8"?>
<configurationDescriptor version="100">
  <logicalFolder name="root" displayName="root" projectFiles="true" kind="ROOT">
    <df root="/home/matthew/Documents/GitHub/sciod/include" name="0">
    </df>
    <logicalFolder name="meson-private"
                   displayName="meson-private"
                   projectFiles="true"
                   root="build/meson-private">
      <itemPath>build/meson-private/sanitycheckcpp.cc</itemPath>
    </logicalFolder>
    <df root="/home/matthew/Documents/GitHub/sciod/src" name="1">
      <in>FloatVec.cpp</in>
      <in>NeuralNet.cpp</in>
      <in>Node.cpp</in>
      <in>Row.cpp</in>
    </df>
    <df root="/home/matthew/Documents/GitHub/sciod/test" name="2">
      <in>catch.cpp</in>
      <in>simpleTests.cpp</in>
    </df>
    <logicalFolder name="ExternalFiles"
                   displayName="Important Files"
                   projectFiles="false"
                   kind="IMPORTANT_FILES_FOLDER">
      <itemPath>.gitignore</itemPath>
      <itemPath>/home/matthew/Documents/GitHub/sciod/nbproject/private/launcher.properties</itemPath>
      <itemPath>meson.build</itemPath>
    </logicalFolder>
  </logicalFolder>
  <sourceFolderFilter>^(nbproject)$</sourceFolderFilter>
  <sourceRootList>
    <Elem>/home/matthew/Documents/GitHub/sciod/src</Elem>
    <Elem>/home/matthew/Documents/GitHub/sciod/include</Elem>
    <Elem>/home/matthew/Documents/GitHub/sciod/test</Elem>
  </sourceRootList>
  <projectmakefile>/home/matthew/Documents/GitHub/sciod/Makefile</projectmakefile>
  <confs>
    <conf name="Default" type="0">
      <toolsSet>
        <compilerSet>GNU|GNU</compilerSet>
        <dependencyChecking>false</dependencyChecking>
        <rebuildPropChanged>false</rebuildPropChanged>
      </toolsSet>
      <flagsDictionary>
        <element flagsID="0" commonFlags="-std=c++14"/>
        <element flagsID="1" commonFlags="-std=c++14 -O3 -fstack-protector"/>
        <element flagsID="2" commonFlags="-std=c++14 -O3 -fstack-protector -fPIC"/>
      </flagsDictionary>
      <codeAssistance>
      </codeAssistance>
      <makefileType>
        <makeTool>
          <buildCommandWorkingDir>/home/matthew/Documents/GitHub/sciod/build</buildCommandWorkingDir>
          <buildCommand>ninja</buildCommand>
          <cleanCommand>ninja clean</cleanCommand>
          <executablePath>build/test/testexe</executablePath>
        </makeTool>
        <preBuild>
          <preBuildCommandWorkingDir>.</preBuildCommandWorkingDir>
          <preBuildCommand></preBuildCommand>
        </preBuild>
      </makefileType>
      <item path="/home/matthew/Documents/GitHub/sciod/src/FloatVec.cpp"
            ex="false"
            tool="1"
            flavor2="11">
        <ccTool flags="2">
        </ccTool>
      </item>
      <item path="/home/matthew/Documents/GitHub/sciod/src/NeuralNet.cpp"
            ex="false"
            tool="1"
            flavor2="11">
        <ccTool flags="2">
        </ccTool>
      </item>
      <item path="/home/matthew/Documents/GitHub/sciod/src/Node.cpp"
            ex="false"
            tool="1"
            flavor2="11">
        <ccTool flags="2">
        </ccTool>
      </item>
      <item path="/home/matthew/Documents/GitHub/sciod/src/Row.cpp"
            ex="false"
            tool="1"
            flavor2="11">
        <ccTool flags="2">
        </ccTool>
      </item>
      <item path="/home/matthew/Documents/GitHub/sciod/test/catch.cpp"
            ex="false"
            tool="1"
            flavor2="11">
        <ccTool flags="1">
        </ccTool>
      </item>
      <item path="/home/matthew/Documents/GitHub/sciod/test/simpleTests.cpp"
            ex="false"
            tool="1"
            flavor2="11">
        <ccTool flags="1">
        </ccTool>
      </item>
      <item path="build/meson-private/sanitycheckcpp.cc"
            ex="false"
            tool="1"
            flavor2="11">
        <ccTool flags="0">
        </ccTool>
      </item>
      <folder path="0">
        <ccTool>
          <incDir>
            <pElem>build/src/sciod@sha</pElem>
            <pElem>build/src</pElem>
            <pElem>src</pElem>
            <pElem>build/include</pElem>
            <pElem>include</pElem>
            <pElem>build</pElem>
          </incDir>
          <preprocessorList>
            <Elem>_FILE_OFFSET_BITS=64</Elem>
          </preprocessorList>
        </ccTool>
      </folder>
      <folder path="2">
        <ccTool>
          <incDir>
            <pElem>build/test/testexe@exe</pElem>
            <pElem>build/test</pElem>
            <pElem>test</pElem>
            <pElem>build/include</pElem>
            <pElem>include</pElem>
            <pElem>build</pElem>
          </incDir>
          <preprocessorList>
            <Elem>_FILE_OFFSET_BITS=64</Elem>
          </preprocessorList>
        </ccTool>
      </folder>
      <folder path="meson-private">
        <ccTool>
          <incDir>
            <pElem>.</pElem>
          </incDir>
        </ccTool>
      </folder>
    </conf>
  </confs>
</configurationDescriptor>
